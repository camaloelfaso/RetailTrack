// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RetailTrack.Data;

#nullable disable

namespace RetailTrack.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250304002153_attpurchaseOrderNumber")]
    partial class attpurchaseOrderNumber
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("PurchaseOrderReceipt", b =>
                {
                    b.Property<Guid>("PurchaseOrdersPurchaseOrderId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("ReceiptsReceiptId")
                        .HasColumnType("char(36)");

                    b.HasKey("PurchaseOrdersPurchaseOrderId", "ReceiptsReceiptId");

                    b.HasIndex("ReceiptsReceiptId");

                    b.ToTable("PurchaseOrderReceipt");
                });

            modelBuilder.Entity("RetailTrack.Models.Design", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<decimal>("Comision")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("Id");

                    b.ToTable("Designs");
                });

            modelBuilder.Entity("RetailTrack.Models.Material", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("MaterialTypeId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("MaterialTypeId");

                    b.ToTable("Materials");
                });

            modelBuilder.Entity("RetailTrack.Models.MaterialSize", b =>
                {
                    b.Property<Guid>("MaterialId")
                        .HasColumnType("char(36)");

                    b.Property<int>("SizeId")
                        .HasColumnType("int");

                    b.Property<decimal>("Cost")
                        .HasColumnType("decimal(65,30)");

                    b.Property<Guid>("Id")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("LastProviderId")
                        .HasColumnType("char(36)");

                    b.Property<string>("LastProviderName")
                        .HasColumnType("longtext");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.HasKey("MaterialId", "SizeId");

                    b.HasIndex("SizeId");

                    b.ToTable("MaterialSizes");
                });

            modelBuilder.Entity("RetailTrack.Models.MaterialType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("MaterialTypes");
                });

            modelBuilder.Entity("RetailTrack.Models.Movement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<decimal>("FinalPrice")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("MovementTypeId")
                        .HasColumnType("int");

                    b.Property<Guid?>("ProductId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("MovementTypeId");

                    b.HasIndex("ProductId");

                    b.ToTable("Movements");
                });

            modelBuilder.Entity("RetailTrack.Models.MovementType", b =>
                {
                    b.Property<int>("Movement_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Movement_Id"));

                    b.Property<string>("Movement_Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Movement_Id");

                    b.ToTable("MovementTypes");
                });

            modelBuilder.Entity("RetailTrack.Models.PaymentMethod", b =>
                {
                    b.Property<int>("PaymentMethodId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("PaymentMethodId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("PaymentMethodId");

                    b.ToTable("PaymentMethods");
                });

            modelBuilder.Entity("RetailTrack.Models.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<Guid>("DesignId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("MaterialId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("ProductStatusId")
                        .HasColumnType("int");

                    b.Property<int>("QuantityRequested")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DesignId");

                    b.HasIndex("MaterialId");

                    b.HasIndex("ProductStatusId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("RetailTrack.Models.ProductStatus", b =>
                {
                    b.Property<int>("Status_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Status_Id"));

                    b.Property<string>("Status_Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Status_Id");

                    b.ToTable("ProductStatuses");
                });

            modelBuilder.Entity("RetailTrack.Models.Provider", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("BusinessName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("RUT")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Providers");
                });

            modelBuilder.Entity("RetailTrack.Models.PurchaseOrder", b =>
                {
                    b.Property<Guid>("PurchaseOrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("ProviderId")
                        .HasColumnType("char(36)");

                    b.Property<int?>("PurchaseOrderNumber")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("PurchaseOrderId");

                    b.HasIndex("ProviderId");

                    b.ToTable("PurchaseOrder");
                });

            modelBuilder.Entity("RetailTrack.Models.PurchaseOrderDetail", b =>
                {
                    b.Property<Guid>("DetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("MaterialId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("PurchaseOrderId")
                        .HasColumnType("char(36)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int?>("ReceivedQuantity")
                        .HasColumnType("int");

                    b.Property<int>("SizeId")
                        .HasColumnType("int");

                    b.Property<decimal>("UnitCost")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("DetailId");

                    b.HasIndex("MaterialId");

                    b.HasIndex("PurchaseOrderId");

                    b.HasIndex("SizeId");

                    b.ToTable("PurchaseOrderDetail");
                });

            modelBuilder.Entity("RetailTrack.Models.Receipt", b =>
                {
                    b.Property<Guid>("ReceiptId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("ProviderId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("ReceiptDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("ReceiptExternalCode")
                        .HasColumnType("longtext");

                    b.HasKey("ReceiptId");

                    b.HasIndex("ProviderId");

                    b.ToTable("Receipts");
                });

            modelBuilder.Entity("RetailTrack.Models.ReceiptDetail", b =>
                {
                    b.Property<Guid>("ReceiptId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("MaterialId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("DetailId")
                        .HasColumnType("char(36)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("SizeId")
                        .HasColumnType("int");

                    b.Property<decimal>("UnitCost")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("ReceiptId", "MaterialId");

                    b.HasIndex("MaterialId");

                    b.HasIndex("SizeId");

                    b.ToTable("ReceiptDetails");
                });

            modelBuilder.Entity("RetailTrack.Models.ReceiptPayment", b =>
                {
                    b.Property<Guid>("ReceiptId")
                        .HasColumnType("char(36)");

                    b.Property<int>("PaymentMethodId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("Percentage")
                        .HasColumnType("decimal(65,30)");

                    b.Property<Guid>("ReceiptPaymentId")
                        .HasColumnType("char(36)");

                    b.HasKey("ReceiptId", "PaymentMethodId");

                    b.HasIndex("PaymentMethodId");

                    b.ToTable("ReceiptPayments");
                });

            modelBuilder.Entity("RetailTrack.Models.Size", b =>
                {
                    b.Property<int>("Size_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Size_Id"));

                    b.Property<string>("Size_Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Size_Id");

                    b.ToTable("Sizes");
                });

            modelBuilder.Entity("PurchaseOrderReceipt", b =>
                {
                    b.HasOne("RetailTrack.Models.PurchaseOrder", null)
                        .WithMany()
                        .HasForeignKey("PurchaseOrdersPurchaseOrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RetailTrack.Models.Receipt", null)
                        .WithMany()
                        .HasForeignKey("ReceiptsReceiptId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RetailTrack.Models.Material", b =>
                {
                    b.HasOne("RetailTrack.Models.MaterialType", "MaterialType")
                        .WithMany("Materials")
                        .HasForeignKey("MaterialTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MaterialType");
                });

            modelBuilder.Entity("RetailTrack.Models.MaterialSize", b =>
                {
                    b.HasOne("RetailTrack.Models.Material", "Material")
                        .WithMany("MaterialSizes")
                        .HasForeignKey("MaterialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RetailTrack.Models.Size", "Size")
                        .WithMany()
                        .HasForeignKey("SizeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Material");

                    b.Navigation("Size");
                });

            modelBuilder.Entity("RetailTrack.Models.Movement", b =>
                {
                    b.HasOne("RetailTrack.Models.MovementType", "Type")
                        .WithMany()
                        .HasForeignKey("MovementTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RetailTrack.Models.Product", null)
                        .WithMany("Movements")
                        .HasForeignKey("ProductId");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("RetailTrack.Models.Product", b =>
                {
                    b.HasOne("RetailTrack.Models.Design", "Design")
                        .WithMany()
                        .HasForeignKey("DesignId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RetailTrack.Models.Material", "Material")
                        .WithMany()
                        .HasForeignKey("MaterialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RetailTrack.Models.ProductStatus", "Status")
                        .WithMany()
                        .HasForeignKey("ProductStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Design");

                    b.Navigation("Material");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("RetailTrack.Models.PurchaseOrder", b =>
                {
                    b.HasOne("RetailTrack.Models.Provider", "Provider")
                        .WithMany()
                        .HasForeignKey("ProviderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Provider");
                });

            modelBuilder.Entity("RetailTrack.Models.PurchaseOrderDetail", b =>
                {
                    b.HasOne("RetailTrack.Models.Material", "Material")
                        .WithMany()
                        .HasForeignKey("MaterialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RetailTrack.Models.PurchaseOrder", "PurchaseOrder")
                        .WithMany("Details")
                        .HasForeignKey("PurchaseOrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RetailTrack.Models.Size", "Size")
                        .WithMany()
                        .HasForeignKey("SizeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Material");

                    b.Navigation("PurchaseOrder");

                    b.Navigation("Size");
                });

            modelBuilder.Entity("RetailTrack.Models.Receipt", b =>
                {
                    b.HasOne("RetailTrack.Models.Provider", "Provider")
                        .WithMany("Receipts")
                        .HasForeignKey("ProviderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Provider");
                });

            modelBuilder.Entity("RetailTrack.Models.ReceiptDetail", b =>
                {
                    b.HasOne("RetailTrack.Models.Material", "Material")
                        .WithMany()
                        .HasForeignKey("MaterialId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("RetailTrack.Models.Receipt", "Receipt")
                        .WithMany("Details")
                        .HasForeignKey("ReceiptId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RetailTrack.Models.Size", "Size")
                        .WithMany()
                        .HasForeignKey("SizeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Material");

                    b.Navigation("Receipt");

                    b.Navigation("Size");
                });

            modelBuilder.Entity("RetailTrack.Models.ReceiptPayment", b =>
                {
                    b.HasOne("RetailTrack.Models.PaymentMethod", "PaymentMethod")
                        .WithMany("Receipts")
                        .HasForeignKey("PaymentMethodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RetailTrack.Models.Receipt", "Receipt")
                        .WithMany("Payments")
                        .HasForeignKey("ReceiptId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PaymentMethod");

                    b.Navigation("Receipt");
                });

            modelBuilder.Entity("RetailTrack.Models.Material", b =>
                {
                    b.Navigation("MaterialSizes");
                });

            modelBuilder.Entity("RetailTrack.Models.MaterialType", b =>
                {
                    b.Navigation("Materials");
                });

            modelBuilder.Entity("RetailTrack.Models.PaymentMethod", b =>
                {
                    b.Navigation("Receipts");
                });

            modelBuilder.Entity("RetailTrack.Models.Product", b =>
                {
                    b.Navigation("Movements");
                });

            modelBuilder.Entity("RetailTrack.Models.Provider", b =>
                {
                    b.Navigation("Receipts");
                });

            modelBuilder.Entity("RetailTrack.Models.PurchaseOrder", b =>
                {
                    b.Navigation("Details");
                });

            modelBuilder.Entity("RetailTrack.Models.Receipt", b =>
                {
                    b.Navigation("Details");

                    b.Navigation("Payments");
                });
#pragma warning restore 612, 618
        }
    }
}
